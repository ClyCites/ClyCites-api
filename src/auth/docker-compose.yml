version: '3.8'

services:
  clycites-auth:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: clycites-auth-server
    ports:
      - "5000:5000"
    environment:
      # Application Settings
      - NODE_ENV=production
      - PORT=5000
      
      # Database - Using your MongoDB Atlas connection
      - MONGODB_URI=${MONGODB_URI}
      
      # JWT Configuration
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE=${JWT_EXPIRE}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_REFRESH_EXPIRE=${JWT_REFRESH_EXPIRE}
      - JWT_COOKIE_EXPIRE=${JWT_COOKIE_EXPIRE}
      
      # Session
      - SESSION_SECRET=${SESSION_SECRET}
      
      # Client URL
      - CLIENT_URL=${CLIENT_URL}
      
      # Email Configuration
      - EMAIL_SERVICE=${EMAIL_SERVICE}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME:-ClyCites}
      - EMAIL_REPLY_TO=${EMAIL_REPLY_TO:-support@clycites.com}
      
      # Google OAuth (Optional)
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-info}
      
      # Security
      - BCRYPT_ROUNDS=${BCRYPT_ROUNDS:-12}
      - MAX_LOGIN_ATTEMPTS=${MAX_LOGIN_ATTEMPTS:-5}
      - LOCK_TIME=${LOCK_TIME:-7200000}
      
      # Rate Limiting
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-900000}
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX:-100}
      - AUTH_RATE_LIMIT_MAX=${AUTH_RATE_LIMIT_MAX:-5}
      
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - clycites-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: clycites-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - clycites-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-clycites-redis-pass}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: clycites-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - clycites-auth
    restart: unless-stopped
    networks:
      - clycites-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: MongoDB Compass proxy for development
  mongo-express:
    image: mongo-express:latest
    container_name: clycites-mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_URL=${MONGODB_URI}
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD:-admin123}
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
    restart: unless-stopped
    networks:
      - clycites-network
    profiles:
      - development

volumes:
  redis_data:
    driver: local

networks:
  clycites-network:
    driver: bridge
